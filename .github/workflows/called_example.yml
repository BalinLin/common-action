name: Called Example
run-name: Called ${{ inputs.sites }}

on:
  workflow_call:
    inputs:
      build_branch_call:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      build_branch:
        type: string
        required: true
env:
  BUILD_BRANCH: ${{ inputs.build_branch || github.ref_name }}

jobs:
  myjob:
    runs-on: ubuntu-latest
    steps:
      - name: Echo github.event_name
        run: |
          echo "${{ github.event_name }}"

      # - name: Set build branch regions if triggered manually
      #   if: ${{ inputs.manual != '' }}
      #   run: |
      #     echo "BUILD_BRANCH=${{ inputs.build_branch }}" >> "$GITHUB_ENV"

      - name: Echo ENV
        run: |
          echo "${{ env.CALLER }}"
          echo "${{ env.BUILD_BRANCH }}"

      - name: Checkout
        uses: actions/checkout@v3.5.0

      - name: Make
        run: |
          make echo_hello_world
          echo ${{ inputs.build_branch }}

      - name: Echo ENV after make echo_hello_world
        run: |
          echo "${{ env.SETTER }}"

      - name: Set ENV
        run: |
          echo "SETTER=echo_hello_world" >> $GITHUB_ENV
          echo "### Hello world from echo_hello_world ðŸš€" >> $GITHUB_STEP_SUMMARY

      - name: Echo ENV after SETTER
        run: |
          echo "${{ env.SETTER }}"

      - name: PWD
        run: |
          ls -l
          echo "$PWD"

      - name: pushd
        run: |
          make echo_pushd

      - name: Echo build_branch
        run: |
          echo ${{ inputs.build_branch }}
          echo ${{ inputs.build_branch == 'main' }}
          echo ${{ inputs.build_branch }} == 'main'
          echo ${{ inputs.build_branch == 'dev'}}
          echo ${{ inputs.build_branch }} == 'dev'
          echo ${{ inputs.build_branch == 'main' }} || ${{ inputs.build_branch == 'dev'}}
          echo ${{ inputs.build_branch }} == 'main' || ${{ inputs.build_branch }} == 'dev'

      - name: Set build_number_prefix environment
        if: ${{ (inputs.build_branch != 'main') && (inputs.build_branch != 'dev') }}
        run: echo "build_number_prefix=${{ inputs.build_branch }}" >> "$GITHUB_ENV"

      - name: Generate build number
        uses: onyxmueller/build-tag-number@v1.0.2
        with:
          token: ${{ secrets.github_token }}
          prefix: ${{ env.build_number_prefix }}

      - name: Print new build number
        run: echo "Build number is $BUILD_NUMBER"
